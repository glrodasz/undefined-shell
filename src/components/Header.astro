---
import Container from "./Container.astro";
import NavigationLink from "./NavigationLink.astro";
import BootcampButton from "./BootcampButton.astro";
import DiscordButton from "./DiscordButton.astro";
import LanguageSelector from "./LanguageSelector.astro";
import {
  type Locale,
  getLocaleFromAstro,
  DEFAULT_LOCALE,
} from "../i18n/config";
import { getMessages } from "../i18n";

type Props = {
  locale?: Locale;
};

const locale = getLocaleFromAstro(Astro);
const messages = getMessages(locale);
const currentPath = Astro.url.pathname;
---

<header id="main-header">
  <Container>
    <nav>
      <div class="title">
        <h2>
          <a href={locale === DEFAULT_LOCALE ? "/" : `/${locale}/`}
            >{messages.site.title}<span class="author"
              >by {messages.site.author}</span
            ></a
          >
        </h2>
      </div>
      <div class="navigation">
        <div class="internal-links">
          <NavigationLink href="/" locale={locale}
            >{messages.navigation.home}</NavigationLink
          >
          <NavigationLink href="/about" locale={locale}
            >{messages.navigation.about}</NavigationLink
          >
          <LanguageSelector currentLocale={locale} currentPath={currentPath} />
        </div>
        <div class="buttons-container">
          <BootcampButton />
          <DiscordButton />
        </div>
      </div>
    </nav>
  </Container>
</header>
<style>
  header {
    margin: 0;
    width: 100%;
    position: fixed;
    padding: 0;
    background: white;
    box-shadow: none;
    backdrop-filter: none;
    z-index: 10;
    transition: all 0.3s ease;
  }

  header.scrolled {
    background: linear-gradient(
      to bottom,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 1) 30%,
      rgba(255, 255, 255, 0.9) 50%,
      rgba(255, 255, 255, 0.65) 100%
    );
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
    backdrop-filter: blur(10px);
  }

  h2 {
    margin: 0;
    font-size: 1em;
  }

  .author {
    display: block;
    font-size: 12.5px;
    letter-spacing: 2px;
    color: var(--color-aquarius-600);
    margin-top: -4px;
  }

  h2 a {
    align-items: center;
    display: flex;
    flex-direction: column;
    border-bottom: none !important;
  }

  h2 a,
  h2 a.active {
    text-decoration: none;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  nav a {
    padding: 1em 0.2em;
    color: var(--color-black-pearl-900);
    border-bottom: 4px solid transparent;
    text-decoration: none;
  }

  nav a.active {
    text-decoration: none;
    border-bottom-color: var(--accent);
  }

  .title {
    display: flex;
    align-items: baseline;
  }

  .separator {
    margin: 0 0.5em;
  }

  .navigation {
    display: flex;
    gap: 1.5em;
  }

  .internal-links {
    display: flex;
    align-items: center;
    gap: 0.8em;
  }

  .social-links,
  .social-links a {
    display: flex;
  }

  .buttons-container {
    display: flex;
    align-items: center;
    gap: 0.8em;
  }

  @media (max-width: 1200px) {
    .buttons-container,
    .social-links {
      display: none;
    }

    .title span:not(.author),
    .title p {
      display: none;
    }

    h2 span.author {
      font-size: 11px;
    }
  }
</style>

<script>
  function handleScroll() {
    const header = document.getElementById("main-header");
    if (window.scrollY > 0) {
      header.classList.add("scrolled");
    } else {
      header.classList.remove("scrolled");
    }
  }

  // Add scroll listener when the page loads
  document.addEventListener("DOMContentLoaded", () => {
    window.addEventListener("scroll", handleScroll);
    // Check initial scroll position
    handleScroll();
  });
</script>
