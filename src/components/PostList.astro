---
import FormattedDate from "./FormattedDate.astro";
import { getPostUrl, calculateReadingTime } from "../utils/content";
import type { Locale } from "../i18n/config";

export interface Props {
  posts: any[];
  locale: Locale;
}

const { posts, locale } = Astro.props;
---

<ul>
  {
    posts.map((post) => (
      <li>
        <div class="post-card" data-href={getPostUrl(post.slug, locale)}>
          <img
            width={720}
            height={420}
            src={post.data.heroImage}
            alt=""
          />
          <div class="post-card-content">
            <h4 class="title">{post.data.title}</h4>
            <p class="date">
              <FormattedDate date={post.data.pubDate} locale={locale} />{" "}
              <span> • </span>
              <strong>
                ⏱️ {calculateReadingTime(post.body)} min
              </strong>
            </p>
            <p class="excerpt">{post.data.description}</p>
          </div>
        </div>
      </li>
    ))
  }
</ul>

<style>
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
    justify-content: space-between;
  }
  ul li {
    width: calc(50% - 1em);
    background: var(--color-white);
    box-shadow: 0px 6px 10px rgba(44, 159, 175, 0.17);
    transition: box-shadow 0.2s ease-in-out;
  }

  ul li:hover {
    box-shadow: var(--box-shadow);
    transition: box-shadow 0.2s ease-in-out;
  }

  ul li * {
    text-decoration: none;
  }

  ul li:first-child {
    width: 100%;
    margin-bottom: 1rem;
  }

  ul li:first-child img {
    width: 100%;
  }

  ul li:first-child .title {
    font-size: 2.369rem;
  }

  ul li img {
    aspect-ratio: 24 / 9;
    object-fit: cover;
    width: 100%;
  }

  ul li:not(:first-child) img {
    aspect-ratio: 4 / 3;
  }

  .post-card {
    display: flex;
    padding: 1em;
    flex-direction: column;
    gap: 20px;
    height: 100%;
    cursor: pointer;
  }

  .title {
    margin: 0;
    color: var(--color-black-pearl-900);
    line-height: 1;
  }

  .date {
    display: inline-flex;
    margin: 0;
    gap: 10px;
    color: rgb(var(--gray));
    align-items: center;
  }

  .excerpt {
    color: rgb(var(--gray));
    text-align: left;
    font-size: 16px;
    line-height: 1.5rem;
  }

  .post-card:hover .title,
  .post-card:hover .date {
    color: var(--accent-dark);
  }

  .post-card img {
    display: flex;
    filter: grayscale(0.8);
    transition: filter 0.2s ease-in-out;
    -webkit-user-drag: none;
    -khtml-user-drag: none;
    -moz-user-drag: none;
    -o-user-drag: none;
    user-drag: none;
    pointer-events: none;
  }

  .post-card:hover img {
    filter: grayscale(0);
    transition: filter 0.2s ease-in-out;
  }

  @media (max-width: 920px) {
    .post-card img {
      filter: grayscale(0);
    }

    ul li img,
    ul li:not(:first-child) img {
      aspect-ratio: 32 / 9;
    }

    ul {
      gap: 0em;
    }

    ul li {
      width: 100%;
    }

    ul li:first-child .title {
      font-size: 1.563em;
    }
  }

  .post-card-content {
    display: flex;
    flex-direction: column;
  }

  ul li {
    container-type: inline-size;
  }

  @container (width > 650px) {
    ul li:not(:first-child) .post-card {
      flex-direction: row;
    }

    ul li:not(:first-child) .post-card img {
      width: 40%;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const postCards = document.querySelectorAll(".post-card");

    postCards.forEach((card) => {
      card.addEventListener("click", (e) => {
        e.preventDefault();
        if (window?.getSelection()?.toString().length === 0) {
          const href = card.getAttribute("data-href");
          if (href) {
            window.location.href = href;
          }
        }
      });
    });
  });
</script>
