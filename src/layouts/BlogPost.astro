---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Container from "../components/Container.astro";
import { SITE_TITLE, SITE_DESCRIPTION, SITE_AUTHOR } from "../consts";
import SimpleAnalytics from "../components/SimpleAnalytics.astro";
import { type Locale } from "../i18n/config";

type Props = CollectionEntry<"posts">["data"] & {
  readingTime?: number;
  locale?: Locale;
};

const { title, description, pubDate, updatedDate, heroImage, readingTime, locale = "en" } =
  Astro.props;

const tabTitle = `${title} • ${SITE_DESCRIPTION} • ${SITE_TITLE} by ${SITE_AUTHOR}`;
---

<html lang={locale}>
  <head>
    <BaseHead
      title={title}
      tabTitle={tabTitle}
      description={description}
      image={heroImage}
    />
    <style>
      .hero-image {
        width: 100%;
        margin-bottom: 1em;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        aspect-ratio: 48 / 9;
        object-fit: cover;
        width: 100%;
      }
      .prose {
        max-width: 920px;
        width: 100%;
        margin: auto;
        color: var(--color-black-pearl-700);
      }
      .title {
        padding: 1em 0 0;
        text-align: left;
        line-height: 1;
      }
      .title h1 {
        margin: 0;
        color: var(--color-black-pearl-900);
      }
      .date,
      .reading-time {
        color: rgb(var(--gray));
      }

      .subheader {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        margin-bottom: 1em;
      }

      .has-hero-image {
        padding-top: 0;
      }

      @media (max-width: 920px) {
        .hero-image img {
          aspect-ratio: 24 / 9;
        }

        .subheader {
          flex-direction: column;
          gap: 0.5em;
        }

        .date {
          display: flex;
          flex-direction: column;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <div class="hero-image">
      {heroImage && <img width={1200} height={510} src={heroImage} alt="" />}
    </div>
    <Container>
      <main class={heroImage ? "has-hero-image" : ""}>
        <article>
          <div class="prose">
            <div class="title">
              <div class="subheader">
                <div class="date">
                  <FormattedDate
                    date={pubDate}
                    leadingComma={Boolean(updatedDate)}
                    locale={locale}
                  />
                  {
                    updatedDate && (
                      <span class="last-updated-on">
                        {locale === "es" ? "última actualización el" : "last updated on"}{" "}
                        <FormattedDate date={updatedDate} locale={locale} />
                      </span>
                    )
                  }
                </div>
                {
                  readingTime && (
                    <strong class="reading-time">
                      ⏱️ {readingTime} {locale === "es" ? "min de lectura" : "min read"}
                    </strong>
                  )
                }
              </div>
              <h1>{title}</h1>
            </div>
            <slot />
          </div>
        </article>
      </main>
    </Container>
    <Footer />
    <SimpleAnalytics />
  </body>
</html>
